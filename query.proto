syntax = "proto3";
package cosmonaut.documentservice.documentservice;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "documentservice/params.proto";
import "documentservice/contract.proto";
import "documentservice/annex.proto";
// this line is used by starport scaffolding # 1

option go_package = "github.com/cosmonaut/documentservice/x/documentservice/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/cosmonaut/documentservice/documentservice/params";
  }
  // Queries a Contract by id.
	rpc Contract(QueryGetContractRequest) returns (QueryGetContractResponse) {
		option (google.api.http).get = "/cosmonaut/documentservice/documentservice/contract/{id}";
	}

	// Queries a list of Contract items.
	rpc ContractAll(QueryAllContractRequest) returns (QueryAllContractResponse) {
		option (google.api.http).get = "/cosmonaut/documentservice/documentservice/contract";
	}

// Queries a Annex by id.
	rpc Annex(QueryGetAnnexRequest) returns (QueryGetAnnexResponse) {
		option (google.api.http).get = "/cosmonaut/documentservice/documentservice/annex/{id}";
	}

	// Queries a list of Annex items.
	rpc AnnexAll(QueryAllAnnexRequest) returns (QueryAllAnnexResponse) {
		option (google.api.http).get = "/cosmonaut/documentservice/documentservice/annex";
	}

// this line is used by starport scaffolding # 2
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryGetContractRequest {
	uint64 id = 1;
}

message QueryGetContractResponse {
	Contract Contract = 1 [(gogoproto.nullable) = false];
}

message QueryAllContractRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllContractResponse {
	repeated Contract Contract = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetAnnexRequest {
	uint64 id = 1;
}

message QueryGetAnnexResponse {
	Annex Annex = 1 [(gogoproto.nullable) = false];
}

message QueryAllAnnexRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllAnnexResponse {
	repeated Annex Annex = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// this line is used by starport scaffolding # 3
